#'@header Coursera Exploratory Data Analysis Course Project 2
#'@date 24/8/2020
#'@title Plot 5
#'@objective Discovering changes emissions from motor vehicle sources from 1999â€“2008 in Baltimore City?

# 1.0 Read Data
file_names = unzip("exdata_data_NEI_data.zip", exdir = "data",list = T)$Name 
file_names = paste0(getwd(),"data/",file_names)

if(file.exists(file_names)==FALSE){
  source("download_script.R")
}

NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")

# 2.0 Do background check on Data
str(NEI)
summary(NEI)
str(SCC)
summary(SCC)

## Finding shows that some columns are not in the suitable classes for str and summary to be used. 

unique_of_NEI = sapply(NEI,unique) # The list's length shows uniqueness of each column
unique_of_SCC = sapply(SCC,unique)

# Observe for missing datapoints
sapply(NEI, function(x) sum(is.na(x))) # No missing data recorded.
sapply(SCC, function(x) sum(is.na(x))) # Missing data recorded in two columns.

# 3.0 Reshaping Data
# Since the objective is relatively vague, i attempted a few checks before confirming the dataset to be used for the plot
library(dplyr)

# Test 1 ;  Get any data related to ON-Road in Baltimore
onroad_scc_lookup = NEI %>% filter(fips == "24510" & type == "ON-ROAD") %>% distinct(SCC) %>% pull()
scc_onroad = SCC %>% filter(SCC %in% onroad_scc_lookup)
scc_onroad_lookup = sapply(scc_onroad,unique)

# Verdict: Each level in the SCC have different content of Vehicle. Filtrating from only one of the column might exclude data 

# Test 2 ; Grep Vehicles from the SCC data 
scc_vehicle = SCC[apply(SCC,1,function(x) any(grepl("vehicle", x, ignore.case = TRUE))),]

scc_vehicle_lookup = sapply(scc_vehicle,unique)

nei_vehicle = NEI %>% filter(fips == "24510" & SCC %in% scc_vehicle$SCC)
nei_vehicle_lookup = sapply(nei_vehicle,unique)

# Verdict: A difference of 977 rows, mainly because the question didn't highlight specifically which type/source that relates to the question.

# Final Verdict: We will use test 2 results as it covers whole vehicle.
q5data = nei_vehicle %>% group_by(year,type) %>% summarise(sum_emission = sum(Emissions))

# 4.0 Plot using Ggplot2
library(ggplot2)
png("plot5.png", width=480, height=480)

ggplot(q5data,aes(year,sum_emission,col = type))+
  geom_line()+
  geom_point()+
  ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
  xlab("Year")+
  ylab("Total PM 2.5 Emissions")+
  scale_fill_discrete(name = "Sources")

dev.off()
