temp = tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip",temp)
temp
data <- read.table(unz(temp, "a1.dat"))
download.file(url = zipped_url,destfile = zip_name,mode = "wb")
zip_name = "exdata_data_NEI_data.zip"
zipped_url ="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url = zipped_url,destfile = zip_name,mode = "wb")
unzip(zip_name, files = NULL, exdir=".")
?unzip
if(dir.exists(paste0(getwd(),"/data")))
data_dir = paste0(getwd(),"/data"))
data_dir = paste0(getwd(),"/data")
dir.exists(data_dir)
if(dir.exists(data_dir)==FALSE){
dir.create(data_dir)
}
unzip(zip_name, files = "data", exdir=".")
unzip(zip_name, exdir = "data", exdir=".")
unzip(zip_name, exdir = "data")
unzip(zip_name, exdir = "data")
file_names = unzip(zip_name, exdir = "data",list = T)
View(file_names)
View(file_names)
file_names = unzip(zip_name, exdir = "data",list = T)$Name
file_names = paste0(getwd(),"data/",file_names)
Source_Classification_Code <- readRDS("C:/Users/User/Desktop/exploratory_analysis/data/Source_Classification_Code.rds")
summarySCC_PM25 <- readRDS("C:/Users/User/Desktop/exploratory_analysis/data/summarySCC_PM25.rds")
View(Source_Classification_Code)
View(summarySCC_PM25)
# 1.1 Declaring filenames and path for download to commence
zip_name = "exdata_data_NEI_data.zip"
zipped_url ="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
file_names = unzip(zip_name, exdir = "data",list = T)$Name
file_names = paste0(getwd(),"data/",file_names)
# 1.2 File Downloading Process
if(!file.exists(file_names) & !file.exists(zip_name)){
download.file(url = zipped_url,destfile = zip_name,mode = "wb")
}
# 1.3 Read Data
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
str(NEI)
summary(NEI)
aggregate(Emissions ~ year, NEI, sum)
source("download_script.R")
# Number of County in the data
unique(NEI$fips)
# Number of County in the data
length(unique(NEI$fips))
# Number of SCC in NEI data
length(unique(NEI$SCC))
sapply(NEI,unique)
sapply(NEI,unique)
unique_of_NEI = sapply(NEI,unique)
View(unique_of_NEI)
library(dplyr)
summary(NEI)
# Observe for missing datapoints
sapply(NEI, function(x) sum(is.na(x)))
plot_data = NEI %>% group_by(year) %>% summarise(sum_emission = sum(Emissions))
aggregate(Emissions ~ year, NEI, sum)
q1data = NEI %>% group_by(year) %>% summarise(sum_emission = sum(Emissions))
# 4.0 Plot using Base
plot(q1data$year,q1data$sum_emission,col = "red",main = "Total Emissions PM 2.5 in United States [1999-2008]",ylab = "Total PM 2.5 Emissions")
# 4.0 Plot using Base
plot(q1data$year,q1data$sum_emission,col = "red",main = "Total Emissions PM 2.5 in United States [1999-2008]",ylab = "Total PM 2.5 Emissions",xlab = "Year")
xx = aggregate(Emissions ~ year, NEI, sum)
View(xx)
?plot
# 4.0 Plot using Base
plot(q1data$year,q1data$sum_emission,type = "l",col = "red",main = "Total Emissions PM 2.5 in United States [1999-2008]",ylab = "Total PM 2.5 Emissions",xlab = "Year")
# 4.0 Plot using Base
png("plot1.png", width=480, height=480)
plot(q1data$year,q1data$sum_emission,type = "l",col = "red",main = "Total Emissions PM 2.5 in United States [1999-2008]",ylab = "Total PM 2.5 Emissions",xlab = "Year")
dev.off()
q2data = NEI %>% filter(fips == "24510") %>% group_by(year) %>% summarise(sum_emission = sum(Emissions))
plot(q2data$year,q2data$sum_emission,type = "l",col = "green",main = "Total Emissions PM 2.5 in Baltimore [1999-2008]",ylab = "Total PM 2.5 Emissions",xlab = "Year")
plot(q2data$year,q2data$sum_emission,type = "l",col = "darkgreen",main = "Total Emissions PM 2.5 in Baltimore [1999-2008]",ylab = "Total PM 2.5 Emissions",xlab = "Year")
# 4.0 Plot using Base
png("plot2.png", width=480, height=480)
plot(q2data$year,q2data$sum_emission,type = "l",col = "darkgreen",main = "Total Emissions PM 2.5 in Baltimore [1999-2008]",ylab = "Total PM 2.5 Emissions",xlab = "Year")
dev.off()
q3data = NEI %>% filter(fips == "24510")
View(SCC)
# 4.0 Plot using Ggplot2
library(ggplot2)
q3data = NEI %>% filter(fips == "24510") %>%  group_by(year,type) %>% summarise(sum_emission = sum(Emissions))
View(q3data)
ggplot(q3data,aes(year,sum_emission,col = "type"))+
geom_line()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
ggplot(q3data,aes(year,sum_emission,col = "type"))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
q3data = NEI %>% filter(fips == "24510")
aggregate(Emissions ~ year + type, q3data, sum)
q3data = NEI %>% filter(fips == "24510") %>%  group_by(year,type) %>% summarise(sum_emission = sum(Emissions))
View(q3data)
q3data = NEI %>% filter(fips == "24510") %>%  group_by(year,type) %>% summarise(sum_emission = sum(Emissions)) %>% arrange(type)
ggplot(q3data,aes(year,sum_emission,col = "type"))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
ggplot(q3data,aes(year,sum_emission),col = "type")+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
ggplot(q3data,aes(year,sum_emission,group = "type"))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
ggplot(q3data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
ggplot(q3data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
png("plot3.png", width=480, height=480)
ggplot(q3data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
dev.off()
png("plot3.png", width=480, height=480)
ggplot(q3data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total Emissions PM 2.5 in Baltimore by Sources [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
dev.off()
View(NEI)
sapply(SCC, function(x) sum(is.na(x)))
unique_of_SCC = sapply(SCC,unique)
View(unique_of_SCC)
summary(SCC)
unique(SCC$EI.Sector)
# Check coal related sources from SCC Data
coal_lookup = SCC[grepl("coal",SCC$Short.Name,ignore.case = T),]
# Check coal related sources from SCC Data
coal_lookup = SCC[grepl("coal",SCC$EI.Sector,ignore.case = T),]
# Check coal related sources from SCC Data
coal_lookup = SCC[grepl("coal",SCC$Short.Name,ignore.case = T),]
q4data = NEI %>% filter(SCC %in% coal_lookup$SCC)
View(q4data)
q4data = NEI %>% filter(SCC %in% coal_lookup$SCC) %>% group_by(year,type) %>% summarise(sum_emission = sum(Emissions))
View(q4data)
ggplot(q4data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Coal Related Sources in US by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
png("plot4.png", width=480, height=480)
ggplot(q4data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Coal Related Sources in US by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
dev.off()
View(SCC)
unique(SCC$SCC.Level.Two)
# Get any data related to ON-Road
onroad_scc_lookup = NEI %>% filter(type == "ON-ROAD")
# Get any data related to ON-Road
onroad_scc_lookup = NEI %>% filter(type == "ON-ROAD") %>% distinct(SCC) %>% pull()
scc_onroad = SCC %>% filter(SCC %in% onroad_scc_lookup)
View(scc_onroad)
unique(scc_onroad$SCC.Level.One)
unique(scc_onroad$SCC.Level.Two)
# Test 2 ; Grep Vehicles from the SCC data [Column : Short.Name]
scc_shortname_lookup =  SCC[grepl("vehicle",SCC$Short.Name,ignore.case = T),]
scc_onroad_lookup = sapply(scc_onroad,unique)
View(scc_onroad_lookup)
scc_onroad_lookup[["Short.Name"]]
# Test 2 ; Grep Vehicles from the SCC data
scc_shortname_lookup =  with(SCC, SCC[grepl("vehicle",SCC$Short.Name,ignore.case = T)      |
# Test 2 ; Grep Vehicles from the SCC data
scc_shortname_lookup =  with(SCC, SCC[grepl("vehicle",SCC$Short.Name,ignore.case = T)      |
grepl("vehicle",SCC$SCC.Level.One,ignore.case = T)   |
grepl("vehicle",SCC$SCC.Level.Two,ignore.case = T)   |
grepl("vehicle",SCC$SCC.Level.Three,ignore.case = T) |
grepl("vehicle",SCC$SCC.Level.Four,ignore.case = T),])
# Test 2 ; Grep Vehicles from the SCC data
scc_shortname_lookup =  with(SCC, SCC[grepl("vehicle",Short.Name,ignore.case = T)      |
grepl("vehicle",SCC.Level.One,ignore.case = T)   |
grepl("vehicle",SCC.Level.Two,ignore.case = T)   |
grepl("vehicle",SCC.Level.Three,ignore.case = T) |
grepl("vehicle",SCC.Level.Four,ignore.case = T),])
SCC[Short.Name]
SCC["Short.Name"]
# Test 2 ; Grep Vehicles from the SCC data
scc_shortname_lookup = sapply(SCC[c("Short.Name","SCC.Level.One","SCC.Level.Two","SCC.Level.Three","SCC.Level.Four")],
function(x) grepl("vehicle", x, ingore.case = TRUE))
# Test 2 ; Grep Vehicles from the SCC data
scc_shortname_lookup = sapply(SCC[c("Short.Name","SCC.Level.One","SCC.Level.Two","SCC.Level.Three","SCC.Level.Four")],
function(x) grepl("vehicle", x, ignore.case = TRUE))
View(scc_shortname_lookup)
# Test 2 ; Grep Vehicles from the SCC data
scc_shortname_lookup = mapply(SCC[c("Short.Name","SCC.Level.One","SCC.Level.Two","SCC.Level.Three","SCC.Level.Four")],
function(x) grepl("vehicle", x, ignore.case = TRUE))
scc_shortname_lookup = SCC[apply(SCC,1,function(x) grepl("vehicle", x, ignore.case = TRUE))]
?apply
scc_shortname_lookup = SCC[apply(SCC,c(1,2),function(x) grepl("vehicle", x, ignore.case = TRUE))]
apply(SCC,c(1,2),function(x) grepl("vehicle", x, ignore.case = TRUE))
scc_shortname_lookup = SCC[apply(SCC,c(1,2),function(x) grepl("vehicle", x, ignore.case = TRUE)),]
View(scc_shortname_lookup)
scc_shortname_lookup = SCC[apply(SCC,1,function(x) any(grepl("vehicle", x, ignore.case = TRUE))),]
View(scc_shortname_lookup)
# Test 2 ; Grep Vehicles from the SCC data
scc_vehicle = SCC[apply(SCC,1,function(x) any(grepl("vehicle", x, ignore.case = TRUE))),]
scc_vehicle_lookup = sapply(scc_vehicle,unique)
View(scc_vehicle_lookup)
# Test 1 ;  Get any data related to ON-Road in Baltimore
onroad_scc_lookup = NEI %>% filter(fips == "24510" & type == "ON-ROAD") %>% distinct(SCC) %>% pull()
scc_onroad = SCC %>% filter(SCC %in% onroad_scc_lookup)
View(scc_vehicle)
nei_vehicle = NEI %>% filter(fips == "24510" & SCC %in% scc_vehicle$SCC)
View(nei_vehicle)
summary(nei_vehicle)
nei_vehicle_lookup = sapply(scc_vehicle,unique)
View(nei_vehicle_lookup)
nei_vehicle_lookup = sapply(nei_vehicle,unique)
View(nei_vehicle_lookup)
nei_vehicle_lookup[["type"]]
# 1.0 Read Data
file_names = unzip("exdata_data_NEI_data.zip", exdir = "data",list = T)$Name
file_names = paste0(getwd(),"data/",file_names)
if(file.exists(file_names)==FALSE){
source("download_script.R")
}
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# 3.0 Reshaping Data
# Since the objective is relatively vague, i attempted a few checks before confirming the dataset to be used for the plot
library(dplyr)
# Test 1 ;  Get any data related to ON-Road in Baltimore
onroad_scc_lookup = NEI %>% filter(fips == "24510" & type == "ON-ROAD") %>% distinct(SCC) %>% pull()
scc_onroad = SCC %>% filter(SCC %in% onroad_scc_lookup)
scc_onroad_lookup = sapply(scc_onroad,unique)
# Test 2 ; Grep Vehicles from the SCC data
scc_vehicle = SCC[apply(SCC,1,function(x) any(grepl("vehicle", x, ignore.case = TRUE))),]
scc_vehicle_lookup = sapply(scc_vehicle,unique)
nei_vehicle = NEI %>% filter(fips == "24510" & SCC %in% scc_vehicle$SCC)
nei_vehicle_lookup = sapply(nei_vehicle,unique)
418/1395
1395-418
# Final Verdict: We will use test 2 results as it covers whole vehicle.
q5data = nei_vehicle
png("plot5.png", width=480, height=480)
dev.off()
ggplot(q5data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
# Final Verdict: We will use test 2 results as it covers whole vehicle.
q5data = nei_vehicle %>% group_by(year,type) %>% %>% summarise(sum_emission = sum(Emissions))
# Final Verdict: We will use test 2 results as it covers whole vehicle.
q5data = nei_vehicle %>% group_by(year,type) %>% summarise(sum_emission = sum(Emissions))
View(q5data)
ggplot(q5data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
png("plot5.png", width=480, height=480)
ggplot(q5data,aes(year,sum_emission,col = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")+
scale_fill_discrete(name = "Sources")
dev.off()
# Verdict: We will use the same methodology as Q5
scc_vehicle = SCC[apply(SCC,1,function(x) any(grepl("vehicle", x, ignore.case = TRUE))),]
scc_vehicle_lookup = sapply(scc_vehicle,unique)
nei_vehicle = NEI %>% filter(fips  %in% c("24510","06037") & SCC %in% scc_vehicle$SCC)
nei_vehicle_lookup = sapply(nei_vehicle,unique)
q6data = nei_vehicle %>% group_by(year,type) %>% summarise(sum_emission = sum(Emissions))
View(q6data)
q6data = nei_vehicle %>% group_by(year,fips,type) %>% summarise(sum_emission = sum(Emissions))
View(q6data)
plot6 = ggplot(q6data,aes(year,sum_emission,group = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
plot6
plot6 = ggplot(q6data,aes(year,sum_emission,group = fips))+
geom_line(aes(fill=dose))+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
plot6 = ggplot(q6data,aes(year,sum_emission,group = fips))+
geom_line(aes(fill=type))+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
plot6 = ggplot(q6data,aes(year,sum_emission,group = fips))+
geom_line(aes(color=type))+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
plot6
plot6 + facet_grid(. ~ fips)
plot6 = ggplot(q6data,aes(year,sum_emission,color = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
plot6 + facet_grid(. ~ fips)
q6data = nei_vehicle %>% group_by(year,fips,type) %>% summarise(sum_emission = sum(Emissions)) %>%
mutate(fips = case_when(
fips == "24510" ~ "Baltimore",
fips == "06037" ~ "Los Angeles"
))
q6data = nei_vehicle %>% group_by(year,fips,type) %>% summarise(sum_emission = sum(Emissions)) %>% ungroup() %>%
mutate(fips = case_when(
fips == "24510" ~ "Baltimore",
fips == "06037" ~ "Los Angeles"
))
plot6 = ggplot(q6data,aes(year,sum_emission,color = type))+
geom_line()+
geom_point()+
ggtitle("Total PM 2.5 Emissions of Motor Vehicle Related Sources in Baltimore by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
plot6 + facet_grid(. ~ fips)
plot6 = ggplot(q6data,aes(year,sum_emission,color = type))+
geom_line()+
geom_point()+
ggtitle("Motor Vehicle PM 2.5 Emissions for Baltimore and Los Angeles by Type [1999-2008]")+
xlab("Year")+
ylab("Total PM 2.5 Emissions")
png("plot6.png", width=480, height=480)
plot6 + facet_grid(. ~ fips)
dev.off()
